/*
 * This file is generated by jOOQ.
 */
package com.wuda.foundation.jooq.code.generation.user.tables;


import com.wuda.foundation.jooq.code.generation.user.FoundationUser;
import com.wuda.foundation.jooq.code.generation.user.Indexes;
import com.wuda.foundation.jooq.code.generation.user.Keys;
import com.wuda.foundation.jooq.code.generation.user.tables.records.IndividualUserGeneralRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row10;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * 个人用户－基本信息
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IndividualUserGeneral extends TableImpl<IndividualUserGeneralRecord> {

    private static final long serialVersionUID = 2116683826;

    /**
     * The reference instance of <code>foundation_user.individual_user_general</code>
     */
    public static final IndividualUserGeneral INDIVIDUAL_USER_GENERAL = new IndividualUserGeneral();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IndividualUserGeneralRecord> getRecordType() {
        return IndividualUserGeneralRecord.class;
    }

    /**
     * The column <code>foundation_user.individual_user_general.individual_user_general_id</code>.
     */
    public final TableField<IndividualUserGeneralRecord, ULong> INDIVIDUAL_USER_GENERAL_ID = createField(DSL.name("individual_user_general_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>foundation_user.individual_user_general.user_id</code>.
     */
    public final TableField<IndividualUserGeneralRecord, ULong> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_user.individual_user_general.nickname</code>. 昵称
     */
    public final TableField<IndividualUserGeneralRecord, String> NICKNAME = createField(DSL.name("nickname"), org.jooq.impl.SQLDataType.VARCHAR(20), this, "昵称");

    /**
     * The column <code>foundation_user.individual_user_general.biography</code>. 个人简介。简短的介绍
     */
    public final TableField<IndividualUserGeneralRecord, String> BIOGRAPHY = createField(DSL.name("biography"), org.jooq.impl.SQLDataType.VARCHAR(128), this, "个人简介。简短的介绍");

    /**
     * The column <code>foundation_user.individual_user_general.picture</code>. 用户图像。保存的是图片地址。命名来源：github
     */
    public final TableField<IndividualUserGeneralRecord, String> PICTURE = createField(DSL.name("picture"), org.jooq.impl.SQLDataType.VARCHAR(45), this, "用户图像。保存的是图片地址。命名来源：github");

    /**
     * The column <code>foundation_user.individual_user_general.create_time</code>.
     */
    public final TableField<IndividualUserGeneralRecord, LocalDateTime> CREATE_TIME = createField(DSL.name("create_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>foundation_user.individual_user_general.create_user_id</code>.
     */
    public final TableField<IndividualUserGeneralRecord, ULong> CREATE_USER_ID = createField(DSL.name("create_user_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_user.individual_user_general.last_modify_time</code>.
     */
    public final TableField<IndividualUserGeneralRecord, LocalDateTime> LAST_MODIFY_TIME = createField(DSL.name("last_modify_time"), org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>foundation_user.individual_user_general.last_modify_user_id</code>.
     */
    public final TableField<IndividualUserGeneralRecord, ULong> LAST_MODIFY_USER_ID = createField(DSL.name("last_modify_user_id"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>foundation_user.individual_user_general.is_deleted</code>.
     */
    public final TableField<IndividualUserGeneralRecord, ULong> IS_DELETED = createField(DSL.name("is_deleted"), org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.BIGINTUNSIGNED)), this, "");

    /**
     * Create a <code>foundation_user.individual_user_general</code> table reference
     */
    public IndividualUserGeneral() {
        this(DSL.name("individual_user_general"), null);
    }

    /**
     * Create an aliased <code>foundation_user.individual_user_general</code> table reference
     */
    public IndividualUserGeneral(String alias) {
        this(DSL.name(alias), INDIVIDUAL_USER_GENERAL);
    }

    /**
     * Create an aliased <code>foundation_user.individual_user_general</code> table reference
     */
    public IndividualUserGeneral(Name alias) {
        this(alias, INDIVIDUAL_USER_GENERAL);
    }

    private IndividualUserGeneral(Name alias, Table<IndividualUserGeneralRecord> aliased) {
        this(alias, aliased, null);
    }

    private IndividualUserGeneral(Name alias, Table<IndividualUserGeneralRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("个人用户－基本信息"), TableOptions.table());
    }

    public <O extends Record> IndividualUserGeneral(Table<O> child, ForeignKey<O, IndividualUserGeneralRecord> key) {
        super(child, key, INDIVIDUAL_USER_GENERAL);
    }

    @Override
    public Schema getSchema() {
        return FoundationUser.FOUNDATION_USER;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.INDIVIDUAL_USER_GENERAL_IDX_USER_ID);
    }

    @Override
    public Identity<IndividualUserGeneralRecord, ULong> getIdentity() {
        return Keys.IDENTITY_INDIVIDUAL_USER_GENERAL;
    }

    @Override
    public UniqueKey<IndividualUserGeneralRecord> getPrimaryKey() {
        return Keys.KEY_INDIVIDUAL_USER_GENERAL_PRIMARY;
    }

    @Override
    public List<UniqueKey<IndividualUserGeneralRecord>> getKeys() {
        return Arrays.<UniqueKey<IndividualUserGeneralRecord>>asList(Keys.KEY_INDIVIDUAL_USER_GENERAL_PRIMARY);
    }

    @Override
    public IndividualUserGeneral as(String alias) {
        return new IndividualUserGeneral(DSL.name(alias), this);
    }

    @Override
    public IndividualUserGeneral as(Name alias) {
        return new IndividualUserGeneral(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IndividualUserGeneral rename(String name) {
        return new IndividualUserGeneral(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IndividualUserGeneral rename(Name name) {
        return new IndividualUserGeneral(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row10<ULong, ULong, String, String, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row10) super.fieldsRow();
    }
}
